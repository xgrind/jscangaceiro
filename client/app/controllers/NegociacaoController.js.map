{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacoesView","Mensagem","MensagemView","NegociacaoService","getNegociacaoDao","DataInvalidaException","Negociacao","Bind","DateConverter","ProxyFactory","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_service","_negociacoes","_mensagem","create","model","_negociacoesView","update","_mensagemView","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","stack","message","apaga","apagaTodos","esvazia","value","focus","paraData","parseInt","parseFloat","importaNegociacoes","obemNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes } from '../domain/negociacao/Negociacoes.js';\nimport { NegociacoesView } from '../ui/views/NegociacoesView.js';\nimport { Mensagem } from '../ui/models/Mensagem.js';\nimport { MensagemView } from '../ui/views/MensagemView.js';\nimport { NegociacaoService } from '../domain/negociacao/NegociacaoService.js';\nimport { getNegociacaoDao } from '../util/DaoFactory.js';\nimport { DataInvalidaException } from '../ui/converters/DataInvalidaException.js';\nimport { Negociacao } from '../domain/negociacao/Negociacao.js';\nimport { Bind } from '../util/Bind.js';\nimport { DateConverter } from '../ui/converters/DateConverter.js';\nimport { ProxyFactory } from '../util/ProxyFactory.js'\n\nexport class NegociacaoController {\n\n    constructor() {\n        const $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');     \n        this._service = new NegociacaoService(); \n        \n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona','esvazia'\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );\n\n        this._negociacoes = ProxyFactory.create(\n            new Negociacoes(),\n            ['adiciona','esvazia'],\n            model => this._negociacoesView.update(model)\n        );             \n\n        this._negociacoesView = new NegociacoesView('#negociacoes');\n        this._negociacoesView.update(this._negociacoes);\n\n        this._mensagem = ProxyFactory.create(\n            new Mensagem(),\n            ['texto'],\n            model => this._mensagemView.update(model)\n        );\n        \n        this._mensagemView = new MensagemView('#mensagemView');\n        this._mensagemView.update(this._mensagem);\n\n        this._init();        \n\n    };\n\n    _init() {        \n        getNegociacaoDao()\n        .then(dao => dao.listaTodos())\n        .then(negociacoes =>\n            negociacoes.forEach(negociacao =>\n                this._negociacoes.adiciona(negociacao)))\n        .catch(err => this._mensagem.texto = err);\n    }\n\n    adiciona(event) {\n       try {\n            event.preventDefault();\n\n            const negociacao = this._criaNegociacao();\n        \n            getNegociacaoDao()\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => {\n                this._negociacoes.adiciona(this._criaNegociacao());\n                this._mensagem.texto = 'Negociação adicionada com sucesso';        \n                this._limpaFormulario();\n            })\n            .catch(err => this._mensagem.texto = err);\n            \n       } catch(err) {\n            console.log(err);\n            console.log(err.stack);\n\n            if (err instanceof DataInvalidaException) {\n                this._mensagem.texto = err.message;\n            } else {\n                this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte';\n            }\n       }\n    }  \n\n    apaga() {\n        getNegociacaoDao()\n        .then(dao => dao.apagaTodos())\n        .then(() => {\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        })\n        .catch(err => this._mensagem.texto = err);\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value),\n        );\n    }\n\n    importaNegociacoes() {      \n        this._service\n            .obemNegociacoesDoPeriodo()\n            .then(negociacoes => {\n                negociacoes\n                    .filter(novaNegociacao => !this._negociacoes.paraArray()\n                        .some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\n                    .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n                this._mensagem.texto = 'Negociações do período importadas com sucesso.';\n            })\n            .catch(err => this._mensagem.texto = err);                  \n    }\n\n    \n}"]}